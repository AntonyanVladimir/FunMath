@model FunMath.ViewModels.CurrentChallengeViewModel
@{
    ViewData["Title"] = "LoadLevel";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container mt-4">
    <div class="badge badge-info p-2 float-right">
        Punkte: @Model.Punkte von @Model.LevelChallengesCount
    </div>
    <form asp-controller="InGame" asp-action="CheckAntwort">
        <div class="p-5 bg-light border-primary rounded ">
            <p> Frage: @Model.ChallengeText </p>
        </div>
        <div class="mt-4">
            Antwort: <input class="form-control d-inline-block" asp-for="UserAntwort" style="width:5em" id="userAntwort" autocomplete="off" />
            <input asp-for="Solution" type="hidden" id="challengeSolution" />
            <input asp-for="Index" type="hidden" />
            <input asp-for="LevelNumber" type="hidden" />
            <input asp-for="Punkte" type="hidden" />
            <div class="btn-group d-block mt-4">
            <a class="btn btn-primary" asp-controller="InGame" asp-action="LoadLevel" asp-route-levelNumber="@Model.LevelNumber" asp-route-challengeIndex="@(Model.Index+1)" asp-route-Points="@Model.Punkte">Überspringen</a> | 
            <input class="btn btn-success " type="submit" value="Check"> 
            </div>

        </div>
    </form>
</div>

